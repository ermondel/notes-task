{"version":3,"sources":["components/Headline.js","actions/notes.js","utils/util.js","components/NoteListItem.js","components/NotesFilters.js","actions/filters.js","selectors/notes.js","components/NotesList.js","components/ModalForm.js","components/ModalView.js","components/ModalHost.js","components/Footer.js","components/App.js","reducers/notes.js","reducers/filters.js","index.js","store/configureStore.js"],"names":["connect","undefined","dispatch","createNote","type","Container","Header","as","floated","Button","icon","labelPosition","color","onClick","Icon","name","str","maxlen","length","slice","icons","high","normal","low","editNote","id","actionEditNote","removeNote","actionRemoveNote","switchNoteStatus","actionSwitchNoteStatus","viewNote","actionViewNote","note","Card","className","status","Content","header","shorten","title","style","flexGrow","description","extra","Dropdown","direction","float","Menu","Item","text","priority","NotesFilters","handleTitleChange","event","value","setTitleFilter","props","handleStatusChange","sortByStatusOpen","sortByStatusDone","sortByStatusAll","handlePriorityChange","sortByPriorityHigh","sortByPriorityNormal","sortByPriorityLow","sortByPriorityAll","filters","this","Form","Group","Input","placeholder","onChange","iconPosition","width","Select","options","Component","state","actionSetTitleFilter","list","filteredList","filter","allowed","noteTitle","toLowerCase","filtersTitle","includes","sort","a","b","date","notes","selectNotes","showFilters","map","key","ModalForm","handleChange","setState","handleFocus","titleError","handleSubmit","preventDefault","trim","saveNote","getFromProps","modalClose","Modal","size","open","onSubmit","label","onFocus","error","TextArea","Actions","negative","content","positive","backgroundColor","addNote","fields","uuid","Date","now","actionAddNote","updateNote","updates","actionUpdateNote","newNote","updatedNote","Footer","href","target","rel","App","Divider","notesReducerDefaultState","action","find","filterReducerDefaultState","store","createStore","combineReducers","notesReducer","filtersReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d462904a.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Container,\n  Header,\n  Button,\n  Icon,\n} from 'semantic-ui-react';\nimport { actionCreateNote } from '../actions/notes';\n\nconst Headline = ({ createNote }) => (\n  <Container>\n    <Header as=\"h1\" floated=\"left\">\n      TODOList\n    </Header>\n    <Button\n      icon\n      labelPosition=\"right\"\n      color=\"blue\"\n      onClick={createNote}\n    >\n      Add note\n      <Icon name=\"add\" />\n    </Button>\n  </Container>\n);\n\nconst mapDispatchToProps = (dispatch) => ({\n  createNote: () => dispatch(actionCreateNote()),\n});\n\nexport default connect(\n  undefined,\n  mapDispatchToProps,\n)(Headline);\n","import uuid from 'uuid';\n\nexport const actionAddNote = (fields = {}) => {\n  const {\n    id = uuid(),\n    title,\n    description = '',\n    priority = 'normal',\n    status = true,\n    date = Date.now(),\n  } = fields;\n\n  return {\n    type: 'ADD_NOTE',\n    note: {\n      id,\n      title,\n      description,\n      priority,\n      status,\n      date,\n    },\n  };\n};\n\nexport const actionUpdateNote = (id, updates) => ({\n  type: 'UPDATE_NOTE',\n  id,\n  updates,\n});\n\nexport const actionSwitchNoteStatus = (id) => ({\n  type: 'SWITCH_NOTE_STATUS',\n  id,\n});\n\nexport const actionRemoveNote = (id) => ({\n  type: 'REMOVE_NOTE',\n  id,\n});\n\nexport const actionCreateNote = () => ({\n  type: 'CREATE_NOTE',\n});\n\nexport const actionEditNote = (id) => ({\n  type: 'EDIT_NOTE',\n  id,\n});\n\nexport const actionCloseNote = () => ({\n  type: 'CLOSE_NOTE',\n});\n\nexport const actionViewNote = (id) => ({\n  type: 'VIEW_NOTE',\n  id,\n});\n","export default (str, maxlen) => {\n  if (str.length > maxlen) {\n    return `${str.slice(0, maxlen)} ...`;\n  }\n  return str;\n};\n","import React from 'react';\nimport { Card, Dropdown, Icon } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport {\n  actionEditNote,\n  actionRemoveNote,\n  actionSwitchNoteStatus,\n  actionViewNote,\n} from '../actions/notes';\nimport shorten from '../utils/util';\n\nconst icons = {\n  high: { icon: 'alarm', color: 'red' },\n  normal: { icon: 'bookmark outline', color: 'blue' },\n  low: { icon: 'circle outline', color: undefined },\n};\n\nconst NoteListItem = ({\n  note,\n  viewNote,\n  switchNoteStatus,\n  editNote,\n  removeNote,\n}) => (\n  <Card className={note.status ? 'noteOpen' : 'noteDone'}>\n    <Card.Content\n      header={shorten(note.title, 30)}\n      style={{ flexGrow: 0 }}\n      onClick={() => viewNote(note.id)}\n      className=\"clickableCard\"\n    />\n    <Card.Content\n      description={shorten(note.description, 255)}\n      onClick={() => viewNote(note.id)}\n      className=\"clickableCard\"\n    />\n    <Card.Content extra>\n      <Dropdown\n        icon=\"ellipsis horizontal\"\n        direction=\"left\"\n        title=\"Menu\"\n        style={{ float: 'right' }}\n      >\n        <Dropdown.Menu>\n          <Dropdown.Item\n            icon={note.status ? 'check' : 'unhide'}\n            text={`Mark as ${note.status ? 'done' : 'open'}`}\n            onClick={() => switchNoteStatus(note.id)}\n          />\n          <Dropdown.Item\n            icon=\"edit\"\n            text=\"Edit note\"\n            onClick={() => editNote(note.id)}\n          />\n          <Dropdown.Item\n            icon=\"trash\"\n            text=\"Remove note\"\n            onClick={() => removeNote(note.id)}\n          />\n        </Dropdown.Menu>\n      </Dropdown>\n      <div>\n        <Icon\n          color={icons[note.priority].color}\n          name={icons[note.priority].icon}\n          title={`${note.priority} priority`}\n        />\n      </div>\n    </Card.Content>\n  </Card>\n);\n\nconst mapDispatchToProps = (dispatch) => ({\n  editNote: (id) => dispatch(actionEditNote(id)),\n  removeNote: (id) => dispatch(actionRemoveNote(id)),\n  switchNoteStatus: (id) => dispatch(actionSwitchNoteStatus(id)),\n  viewNote: (id) => dispatch(actionViewNote(id)),\n});\n\nexport default connect(\n  undefined,\n  mapDispatchToProps,\n)(NoteListItem);\n","import React, { Component } from 'react';\nimport { Form } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport {\n  actionSetTitleFilter,\n  actionSortByStatusAll,\n  actionSortByStatusOpen,\n  actionSortByStatusDone,\n  actionSortByPriorityAll,\n  actionSortByPriorityHigh,\n  actionSortByPriorityNormal,\n  actionSortByPriorityLow,\n} from '../actions/filters';\n\nclass NotesFilters extends Component {\n  handleTitleChange = (event, { value }) => {\n    const { setTitleFilter } = this.props;\n\n    setTitleFilter(value);\n  };\n\n  handleStatusChange = (event, { value }) => {\n    const {\n      sortByStatusOpen,\n      sortByStatusDone,\n      sortByStatusAll,\n    } = this.props;\n\n    switch (value) {\n      case 'open':\n        return sortByStatusOpen();\n      case 'done':\n        return sortByStatusDone();\n      default:\n        return sortByStatusAll();\n    }\n  };\n\n  handlePriorityChange = (event, { value }) => {\n    const {\n      sortByPriorityHigh,\n      sortByPriorityNormal,\n      sortByPriorityLow,\n      sortByPriorityAll,\n    } = this.props;\n\n    switch (value) {\n      case 'high':\n        return sortByPriorityHigh();\n      case 'normal':\n        return sortByPriorityNormal();\n      case 'low':\n        return sortByPriorityLow();\n      default:\n        return sortByPriorityAll();\n    }\n  };\n\n  render() {\n    const { filters } = this.props;\n\n    return (\n      <Form className=\"Filters\">\n        <Form.Group>\n          <Form.Input\n            placeholder=\"Search by title\"\n            name=\"title\"\n            value={filters.title}\n            onChange={this.handleTitleChange}\n            icon=\"search\"\n            iconPosition=\"left\"\n            width={7}\n            className=\"Filter\"\n          />\n          <Form.Select\n            name=\"status\"\n            value={filters.status}\n            onChange={this.handleStatusChange}\n            options={[\n              { text: 'All', value: 'all' },\n              { text: 'Open', value: 'open' },\n              { text: 'Done', value: 'done' },\n            ]}\n            className=\"Filter\"\n          />\n          <Form.Select\n            name=\"priority\"\n            value={filters.priority}\n            onChange={this.handlePriorityChange}\n            options={[\n              { text: 'All', value: 'all' },\n              { text: 'High', value: 'high' },\n              { text: 'Normal', value: 'normal' },\n              { text: 'Low', value: 'low' },\n            ]}\n            className=\"Filter\"\n          />\n        </Form.Group>\n      </Form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  filters: state.filters,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setTitleFilter: (title) => {\n    dispatch(actionSetTitleFilter(title));\n  },\n  sortByStatusAll: () => {\n    dispatch(actionSortByStatusAll());\n  },\n  sortByStatusOpen: () => {\n    dispatch(actionSortByStatusOpen());\n  },\n  sortByStatusDone: () => {\n    dispatch(actionSortByStatusDone());\n  },\n  sortByPriorityAll: () => {\n    dispatch(actionSortByPriorityAll());\n  },\n  sortByPriorityHigh: () => {\n    dispatch(actionSortByPriorityHigh());\n  },\n  sortByPriorityNormal: () => {\n    dispatch(actionSortByPriorityNormal());\n  },\n  sortByPriorityLow: () => {\n    dispatch(actionSortByPriorityLow());\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(NotesFilters);\n","export const actionSetTitleFilter = (title) => ({\n  type: 'SET_TITLE_FILTER',\n  title,\n});\n\nexport const actionSortByStatusAll = () => ({\n  type: 'SORT_BY_STATUS_ALL',\n});\n\nexport const actionSortByStatusOpen = () => ({\n  type: 'SORT_BY_STATUS_OPEN',\n});\n\nexport const actionSortByStatusDone = () => ({\n  type: 'SORT_BY_STATUS_DONE',\n});\n\nexport const actionSortByPriorityAll = () => ({\n  type: 'SORT_BY_PRIORITY_ALL',\n});\n\nexport const actionSortByPriorityHigh = () => ({\n  type: 'SORT_BY_PRIORITY_HIGH',\n});\n\nexport const actionSortByPriorityNormal = () => ({\n  type: 'SORT_BY_PRIORITY_NORMAL',\n});\n\nexport const actionSortByPriorityLow = () => ({\n  type: 'SORT_BY_PRIORITY_LOW',\n});\n","export default ({ list = [] } = {}, filters) => {\n  const filteredList = list.filter((note) => {\n    // allow note to display\n    let allowed = true;\n\n    // filters\n    if (filters.status === 'open') {\n      allowed = allowed && note.status === true;\n    }\n    if (filters.status === 'done') {\n      allowed = allowed && note.status === false;\n    }\n    if (filters.priority === 'high') {\n      allowed = allowed && note.priority === 'high';\n    }\n    if (filters.priority === 'normal') {\n      allowed = allowed && note.priority === 'normal';\n    }\n    if (filters.priority === 'low') {\n      allowed = allowed && note.priority === 'low';\n    }\n    if (filters.title) {\n      const noteTitle = note.title.toLowerCase();\n      const filtersTitle = filters.title.toLowerCase();\n\n      allowed = allowed && noteTitle.includes(filtersTitle);\n    }\n\n    return allowed;\n  });\n\n  return filteredList.sort((a, b) => {\n    if (a.date < b.date) return 1;\n    return a.date > b.date ? -1 : 0;\n  });\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Card } from 'semantic-ui-react';\nimport NoteListItem from './NoteListItem';\nimport NotesFilters from './NotesFilters';\nimport selectNotes from '../selectors/notes';\n\nconst NotesList = ({ showFilters, notes }) => (\n  <div className=\"NotesList\">\n    <Container>\n      {showFilters && <NotesFilters />}\n      {notes.length ? (\n        <Card.Group>\n          {notes.map((note) => (\n            <NoteListItem key={note.id} note={note} />\n          ))}\n        </Card.Group>\n      ) : null}\n    </Container>\n  </div>\n);\nconst mapStateToProps = (state) => ({\n  notes: selectNotes(state.notes, state.filters),\n  showFilters: state.notes.list.length > 0,\n});\n\nexport default connect(mapStateToProps)(NotesList);\n","import React, { Component } from 'react';\nimport { Modal, Button, Form } from 'semantic-ui-react';\n\nclass ModalForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: '',\n      description: '',\n      priority: 'normal',\n      getFromProps: true,\n      titleError: false,\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (state.getFromProps && props.note) {\n      return { ...state, ...props.note, getFromProps: false };\n    }\n    return null;\n  }\n\n  handleChange = (event, { name, value }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleFocus = () => {\n    const { titleError } = this.state;\n\n    if (titleError) {\n      this.setState({\n        titleError: false,\n      });\n    }\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { title, description, priority } = this.state;\n\n    if (title.trim().length <= 0) {\n      this.setState({ titleError: true });\n    } else {\n      const { saveNote } = this.props;\n\n      saveNote({ title, description, priority });\n\n      this.setState({\n        title: '',\n        description: '',\n        priority: 'normal',\n        getFromProps: true,\n        titleError: false,\n      });\n    }\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      priority,\n      titleError,\n    } = this.state;\n\n    const { header, modalClose } = this.props;\n\n    return (\n      <Modal size=\"mini\" open>\n        <Modal.Header>{header}</Modal.Header>\n        <Modal.Content>\n          <Form onSubmit={this.handleSubmit}>\n            <Form.Input\n              label=\"Title\"\n              placeholder={\n                titleError ? 'Please enter title' : 'Title'\n              }\n              name=\"title\"\n              value={title}\n              onChange={this.handleChange}\n              onFocus={this.handleFocus}\n              error={titleError}\n            />\n            <Form.TextArea\n              label=\"Description\"\n              placeholder=\"Description\"\n              name=\"description\"\n              value={description}\n              onChange={this.handleChange}\n            />\n            <Form.Select\n              label=\"Priority\"\n              placeholder=\"Priority\"\n              name=\"priority\"\n              value={priority}\n              onChange={this.handleChange}\n              options={[\n                { text: 'High', value: 'high' },\n                { text: 'Normal', value: 'normal' },\n                { text: 'Low', value: 'low' },\n              ]}\n            />\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button\n            negative\n            onClick={modalClose}\n            content=\"Cancel\"\n          />\n          <Button\n            positive\n            icon=\"checkmark\"\n            labelPosition=\"right\"\n            content=\"Save\"\n            onClick={this.handleSubmit}\n          />\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n}\n\nexport default ModalForm;\n","import React from 'react';\nimport { Modal, Button } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { actionCloseNote } from '../actions/notes';\n\nconst ModalView = ({ note, modalClose }) => (\n  <Modal size=\"mini\" open>\n    <Modal.Header\n      style={\n        note.status\n          ? {}\n          : { backgroundColor: 'grey', color: 'white' }\n      }\n    >\n      {note.title}\n    </Modal.Header>\n    <Modal.Content>{note.description}</Modal.Content>\n    <Modal.Actions>\n      <Button onClick={modalClose}>Close</Button>\n    </Modal.Actions>\n  </Modal>\n);\n\nconst mapDispatchToProps = (dispatch) => ({\n  modalClose: () => dispatch(actionCloseNote()),\n});\n\nexport default connect(\n  undefined,\n  mapDispatchToProps,\n)(ModalView);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ModalForm from './ModalForm';\nimport ModalView from './ModalView';\nimport {\n  actionCloseNote,\n  actionAddNote,\n  actionUpdateNote,\n} from '../actions/notes';\n\nconst ModalHost = ({\n  note,\n  status,\n  modalClose,\n  addNote,\n  updateNote,\n}) => {\n  if (status === 'CREATE_NOTE') {\n    return (\n      <ModalForm\n        header=\"Add new note\"\n        modalClose={modalClose}\n        saveNote={(newNote) => addNote(newNote)}\n      />\n    );\n  }\n\n  if (status === 'EDIT_NOTE') {\n    return (\n      <ModalForm\n        header=\"Edit note\"\n        note={note}\n        modalClose={modalClose}\n        saveNote={(updatedNote) => {\n          updateNote(note.id, updatedNote);\n        }}\n      />\n    );\n  }\n\n  if (status === 'VIEW_NOTE') {\n    return <ModalView note={note} modalClose={modalClose} />;\n  }\n\n  return null;\n};\n\nconst mapStateToProps = (state) => ({\n  status: state.notes.status,\n  note: state.notes.note,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  modalClose: () => dispatch(actionCloseNote()),\n  addNote: (note) => dispatch(actionAddNote(note)),\n  updateNote: (id, note) => dispatch(actionUpdateNote(id, note)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ModalHost);\n","import React from 'react';\nimport { Container } from 'semantic-ui-react';\n\nconst Footer = () => (\n  <Container className=\"Footer\">\n    <a\n      href=\"https://github.com/ermondel\"\n      className=\"author\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      © Serhii\n    </a>\n  </Container>\n);\n\nexport default Footer;\n","import React from 'react';\nimport { Divider } from 'semantic-ui-react';\nimport Headline from './Headline';\nimport NoteList from './NotesList';\nimport ModalHost from './ModalHost';\nimport Footer from './Footer';\n\nconst App = () => (\n  <div className=\"App\">\n    <Headline />\n    <Divider />\n    <NoteList />\n    <Divider />\n    <Footer />\n    <ModalHost />\n  </div>\n);\n\nexport default App;\n","const notesReducerDefaultState = {\n  list: [],\n  status: 'NONE',\n  note: null,\n};\n\nexport default (state = notesReducerDefaultState, action) => {\n  //\n  switch (action.type) {\n    case 'ADD_NOTE':\n      return {\n        list: [...state.list, action.note],\n        status: 'NOTE_ADDED',\n        note: action.note,\n      };\n\n    case 'UPDATE_NOTE':\n      return {\n        list: state.list.map((note) => {\n          if (note.id === action.id) {\n            return { ...note, ...action.updates };\n          }\n          return note;\n        }),\n        status: 'NOTE_UPDATED',\n        note: state.list.find(({ id }) => id === action.id),\n      };\n\n    case 'SWITCH_NOTE_STATUS':\n      return {\n        list: state.list.map((note) => {\n          if (note.id === action.id) {\n            return { ...note, status: !note.status };\n          }\n          return note;\n        }),\n        status: 'STATUS_SWITCHED',\n        note: state.list.find(({ id }) => id === action.id),\n      };\n\n    case 'REMOVE_NOTE':\n      return {\n        list: state.list.filter(({ id }) => id !== action.id),\n        status: 'NOTE_REMOVED',\n        note: state.list.find(({ id }) => id === action.id),\n      };\n\n    case 'CREATE_NOTE':\n      return {\n        list: state.list,\n        status: action.type,\n        note: state.note,\n      };\n\n    case 'EDIT_NOTE':\n      return {\n        list: state.list,\n        status: action.type,\n        note: state.list.find(({ id }) => id === action.id),\n      };\n\n    case 'CLOSE_NOTE':\n      return {\n        list: state.list,\n        status: action.type,\n        note: state.note,\n      };\n\n    case 'VIEW_NOTE':\n      return {\n        list: state.list,\n        status: action.type,\n        note: state.list.find(({ id }) => id === action.id),\n      };\n\n    default:\n      return state;\n  }\n};\n","const filterReducerDefaultState = {\n  title: '',\n  status: 'all',\n  priority: 'all',\n};\n\nexport default (state = filterReducerDefaultState, action) => {\n  switch (action.type) {\n    case 'SET_TITLE_FILTER':\n      return { ...state, title: action.title };\n\n    case 'SORT_BY_STATUS_ALL':\n      return { ...state, status: 'all' };\n\n    case 'SORT_BY_STATUS_OPEN':\n      return { ...state, status: 'open' };\n\n    case 'SORT_BY_STATUS_DONE':\n      return { ...state, status: 'done' };\n\n    case 'SORT_BY_PRIORITY_ALL':\n      return { ...state, priority: 'all' };\n\n    case 'SORT_BY_PRIORITY_HIGH':\n      return { ...state, priority: 'high' };\n\n    case 'SORT_BY_PRIORITY_NORMAL':\n      return { ...state, priority: 'normal' };\n\n    case 'SORT_BY_PRIORITY_LOW':\n      return { ...state, priority: 'low' };\n\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport configureStore from './store/configureStore';\nimport 'semantic-ui-css/semantic.min.css';\nimport './style/index.scss';\n\n// actions and fixtures\n// import { actionAddNote } from './actions/notes';\n// import notes from './tests/fixtures/notes';\n\n// redux store\nconst store = configureStore();\n\n// store.subscribe(() => {\n//   console.log(store.getState());\n// });\n\n// redux store test\n// notes.forEach((note) => {\n//   store.dispatch(actionAddNote(note));\n// });\n\n// render app\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n","import { createStore, combineReducers } from 'redux';\nimport notesReducer from '../reducers/notes';\nimport filtersReducer from '../reducers/filters';\n\nexport default () => createStore(combineReducers({\n  notes: notesReducer,\n  filters: filtersReducer,\n}));\n"],"sourceRoot":""}